{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4404,"status":"ok","timestamp":1663900842121,"user":{"displayName":"신준호","userId":"03513964947086530035"},"user_tz":-540},"id":"NZ7C7ssXkAPw","outputId":"6574e7f7-5a66-46e8-82d7-94574036f2f8"},"outputs":[{"name":"stdout","output_type":"stream","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting pyngrok\n","  Downloading pyngrok-5.1.0.tar.gz (745 kB)\n","\u001b[K     |████████████████████████████████| 745 kB 38.8 MB/s \n","\u001b[?25hRequirement already satisfied: PyYAML in /usr/local/lib/python3.7/dist-packages (from pyngrok) (6.0)\n","Building wheels for collected packages: pyngrok\n","  Building wheel for pyngrok (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for pyngrok: filename=pyngrok-5.1.0-py3-none-any.whl size=19007 sha256=0afba700a583e6001b39e13c96dc0c612ee749f565ee6c5be6e8aa2203545226\n","  Stored in directory: /root/.cache/pip/wheels/bf/e6/af/ccf6598ecefecd44104069371795cb9b3afbcd16987f6ccfb3\n","Successfully built pyngrok\n","Installing collected packages: pyngrok\n","Successfully installed pyngrok-5.1.0\n"]}],"source":["!pip install pyngrok"]},{"cell_type":"code","execution_count":2,"metadata":{"executionInfo":{"elapsed":307,"status":"ok","timestamp":1663900847947,"user":{"displayName":"신준호","userId":"03513964947086530035"},"user_tz":-540},"id":"2jvXFXRkiZ06"},"outputs":[],"source":["%mkdir templates -p"]},{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":282,"status":"ok","timestamp":1663900855604,"user":{"displayName":"신준호","userId":"03513964947086530035"},"user_tz":-540},"id":"Dmt7Zaiwi7hT","outputId":"d62e710d-dc0d-4d9e-e282-2131b52401bd"},"outputs":[{"name":"stdout","output_type":"stream","text":["Writing templates/index.html\n"]}],"source":["%%writefile templates/index.html\n","\n","\u003chtml\u003e\n","\u003chead\u003e\n","\u003cstyle\u003e\n","body {\n","    background-color : lightblue;\n","}\n","\u003c/style\u003e \u003c/head\u003e\n","\u003cbody\u003e\n","\u003ch1\u003e welcome to HardCC! \u003c/h1\u003e\n","\u003c/body\u003e\n","\u003c/html\u003e\n"]},{"cell_type":"code","execution_count":4,"metadata":{"executionInfo":{"elapsed":274,"status":"ok","timestamp":1663900969754,"user":{"displayName":"신준호","userId":"03513964947086530035"},"user_tz":-540},"id":"EXW7SMH4kOGk"},"outputs":[],"source":["import os\n","import threading\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6,"status":"ok","timestamp":1663660611816,"user":{"displayName":"신준호","userId":"03513964947086530035"},"user_tz":-540},"id":"wftjxkzzkTTP","outputId":"d11711dc-efff-4905-8bcd-6f6159915e77"},"outputs":[{"name":"stdout","output_type":"stream","text":[" * Serving Flask app \"__main__\" (lazy loading)\n"," * Environment: production\n","\u001b[31m   WARNING: This is a development server. Do not use it in a production deployment.\u001b[0m\n","\u001b[2m   Use a production WSGI server instead.\u001b[0m\n"," * Debug mode: off\n"]},{"name":"stderr","output_type":"stream","text":["INFO:werkzeug: * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n"]}],"source":["from flask import Flask, render_template\n","from pyngrok import ngrok\n","os.environ['Flask_ENV'] = \"development\"\n","app = Flask(__name__)\n","port = 5000\n","ngrok.set_auth_token(\"2Eyh8kfEgxo0KWLbNci43BsaVi9_5oo4ce2DxydxG2xAAobmi\")\n","public_url = ngrok.connect(port).public_url\n","#print(\" * ngrok \\\"{}\" - \\\"http://127.0.0.1:{}\\\"\".format(public_url,port))\n","app.config[\"BASE_URL\"] = public_url\n","\n","@app.route(\"/\")\n","def index():\n","    return render_template(\"index.html\")\n","\n","threading.Thread(target=app.run, kwargs={\"use_reloader\": False}).start()\n"]},{"cell_type":"code","execution_count":5,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":51934,"status":"ok","timestamp":1663901042947,"user":{"displayName":"신준호","userId":"03513964947086530035"},"user_tz":-540},"id":"sEPmCzzS0e7S","outputId":"a4f739c3-7554-48c4-83c0-a3c8ad35b9f8"},"outputs":[{"name":"stdout","output_type":"stream","text":[" * Serving Flask app \"__main__\" (lazy loading)\n"," * Environment: production\n","\u001b[31m   WARNING: This is a development server. Do not use it in a production deployment.\u001b[0m\n","\u001b[2m   Use a production WSGI server instead.\u001b[0m\n"," * Debug mode: off\n"]},{"name":"stderr","output_type":"stream","text":["INFO:werkzeug: * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n"]}],"source":["#face_detect_web_video_save.py\n","\n","from flask import Flask, render_template, Response\n","import cv2\n","import numpy as np\n","import time\n","import datetime\n","import sys\n","\n","faceCascade = cv2.CascadeClassifier(\"haarcascade_frontalface_default.xml\")\n","num = 3\n","\n","\n","app = Flask(__name__)\n","\n"," \n","\n","@app.route('/')\n","def index():\n","    \"\"\"Video streaming home page.\"\"\"\n","    now = datetime.datetime.now()\n","    timeString = now.strftime(\"%Y-%m-%d %H:%M\")\n","    templateData = {\n","            'title':'Image Streaming',\n","            'time': timeString\n","            }\n","    return render_template('index.html', **templateData)\n","\n"," \n","\n","def gen_frames():\n","\n","    camera = cv2.VideoCapture(0)\n","    width = camera.get(cv2.CAP_PROP_FRAME_WIDTH) \n","    height = camera.get(cv2.CAP_PROP_FRAME_HEIGHT)   \n","    fourcc = cv2.VideoWriter_fourcc(*\"XVID\")\n","    fps = 30\n","    out = cv2.VideoWriter('video.avi', fourcc, fps, (int(width), int(height)))\n","\n","   \n","    time.sleep(0.2)\n","    lastTime = time.time()*1000.0\n","\n","    while True:\n","        ret, image = camera.read()\n","       \n","        gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)\n","       \n","        faces = faceCascade.detectMultiScale(gray,scaleFactor=1.1,minNeighbors=6)\n","        delt = time.time()*1000.0-lastTime\n","        s = str(int(delt))\n","        #print (delt,\" Found {0} faces!\".format(len(faces)) )\n","        lastTime = time.time()*1000.0\n","        # Draw a rectangle around the faces\n","        for (x, y, w, h) in faces:\n","            cv2.circle(image, (int(x+w/2), int(y+h/2)), int((w+h)/3), (255, 255, 255), 3)\n","        cv2.putText(image, s, (10, 25),cv2.FONT_HERSHEY_SIMPLEX, 0.7, (0, 255, 0), 2)\n","        now = datetime.datetime.now()\n","        timeString = now.strftime(\"%Y-%m-%d %H:%M\")\n","        cv2.putText(image, timeString, (10, 45),cv2.FONT_HERSHEY_SIMPLEX, 0.7, (255, 0, 0), 2)\n","        #cv2.imshow(\"Frame\", image)\n","        out.write(image)\n","      \n","        key = cv2.waitKey(1) \u0026 0xFF\n","     # if the `q` key was pressed, break from the loop\n","        if key == ord(\"q\"):\n","            break\n","   \n","        ret, buffer = cv2.imencode('.jpg', image)\n","        frame = buffer.tobytes()\n","        yield (b'--frame\\r\\n'\n","               b'Content-Type: image/jpeg\\r\\n\\r\\n' + frame + b'\\r\\n')\n","    camera.release()\n","    out.realease()\n","    cv2.destroyAllWindows()\n","       \n"," \n","@app.route('/video_feed')\n","\n","def video_feed():\n","    \"\"\"Video streaming route. Put this in the src attribute of an img tag.\"\"\"\n","    return Response(gen_frames(),\n","                    mimetype='multipart/x-mixed-replace; boundary=frame')\n","\n"," \n","\n","if __name__ == '__main__':\n","    app.run() "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"XdDedR83cOSS"},"outputs":[],"source":["! sudo lsof -i :5000"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3w3YEbWuczuI"},"outputs":[],"source":["#! sudo kill -9 #PID 821"]},{"cell_type":"code","execution_count":7,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2612,"status":"ok","timestamp":1663901055390,"user":{"displayName":"신준호","userId":"03513964947086530035"},"user_tz":-540},"id":"BxQTeu006rRI","outputId":"e3ea033b-9fff-498f-ef47-1ae621173db8"},"outputs":[{"name":"stdout","output_type":"stream","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting flask-ngrok\n","  Downloading flask_ngrok-0.0.25-py3-none-any.whl (3.1 kB)\n","Requirement already satisfied: Flask\u003e=0.8 in /usr/local/lib/python3.7/dist-packages (from flask-ngrok) (1.1.4)\n","Requirement already satisfied: requests in /usr/local/lib/python3.7/dist-packages (from flask-ngrok) (2.23.0)\n","Requirement already satisfied: click\u003c8.0,\u003e=5.1 in /usr/local/lib/python3.7/dist-packages (from Flask\u003e=0.8-\u003eflask-ngrok) (7.1.2)\n","Requirement already satisfied: itsdangerous\u003c2.0,\u003e=0.24 in /usr/local/lib/python3.7/dist-packages (from Flask\u003e=0.8-\u003eflask-ngrok) (1.1.0)\n","Requirement already satisfied: Werkzeug\u003c2.0,\u003e=0.15 in /usr/local/lib/python3.7/dist-packages (from Flask\u003e=0.8-\u003eflask-ngrok) (1.0.1)\n","Requirement already satisfied: Jinja2\u003c3.0,\u003e=2.10.1 in /usr/local/lib/python3.7/dist-packages (from Flask\u003e=0.8-\u003eflask-ngrok) (2.11.3)\n","Requirement already satisfied: MarkupSafe\u003e=0.23 in /usr/local/lib/python3.7/dist-packages (from Jinja2\u003c3.0,\u003e=2.10.1-\u003eFlask\u003e=0.8-\u003eflask-ngrok) (2.0.1)\n","Requirement already satisfied: chardet\u003c4,\u003e=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests-\u003eflask-ngrok) (3.0.4)\n","Requirement already satisfied: idna\u003c3,\u003e=2.5 in /usr/local/lib/python3.7/dist-packages (from requests-\u003eflask-ngrok) (2.10)\n","Requirement already satisfied: certifi\u003e=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests-\u003eflask-ngrok) (2022.6.15)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,\u003c1.26,\u003e=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests-\u003eflask-ngrok) (1.24.3)\n","Installing collected packages: flask-ngrok\n","Successfully installed flask-ngrok-0.0.25\n"]}],"source":[" !pip install flask-ngrok"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/"},"id":"y66VGABs6VPe"},"outputs":[{"name":"stdout","output_type":"stream","text":[" * Serving Flask app \"__main__\" (lazy loading)\n"," * Environment: production\n","\u001b[31m   WARNING: This is a development server. Do not use it in a production deployment.\u001b[0m\n","\u001b[2m   Use a production WSGI server instead.\u001b[0m\n"," * Debug mode: off\n"]},{"name":"stderr","output_type":"stream","text":["INFO:werkzeug: * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n"]},{"name":"stdout","output_type":"stream","text":[" * Running on http://59c5-34-86-244-177.ngrok.io\n"," * Traffic stats available on http://127.0.0.1:4040\n"]}],"source":["from flask import *\n","from flask_ngrok import run_with_ngrok\n","\n","app = Flask(__name__)\n","run_with_ngrok(app)\n","@app.route('/')\n","\n","def home():\n","     return \"Hello Flask!\"\n","\n","@app.route('/color')\n","def name():\n","    return render_template('index.html')\n","\n","if __name__ == '__main__':\n","     app.run()  "]}],"metadata":{"colab":{"authorship_tag":"ABX9TyNRh+4n4zayyZpAcInvwnvo","name":"","version":""},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}